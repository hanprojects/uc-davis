%PDF-1.4
%“Œ‹ž ReportLab Generated PDF document http://www.reportlab.com
1 0 obj
<<
/F1 2 0 R /F2 3 0 R /F3 34 0 R /F4 36 0 R /F5 37 0 R
>>
endobj
2 0 obj
<<
/BaseFont /Helvetica /Encoding /WinAnsiEncoding /Name /F1 /Subtype /Type1 /Type /Font
>>
endobj
3 0 obj
<<
/BaseFont /Helvetica-Bold /Encoding /WinAnsiEncoding /Name /F2 /Subtype /Type1 /Type /Font
>>
endobj
4 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 35 0 R /XYZ 62.69291 399.0236 0 ] /Rect [ 62.69291 666.0236 106.5929 678.0236 ] /Subtype /Link /Type /Annot
>>
endobj
5 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 35 0 R /XYZ 62.69291 399.0236 0 ] /Rect [ 527.0227 666.7736 532.5827 678.7736 ] /Subtype /Link /Type /Annot
>>
endobj
6 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 35 0 R /XYZ 62.69291 369.0236 0 ] /Rect [ 82.69291 648.0236 134.3729 660.0236 ] /Subtype /Link /Type /Annot
>>
endobj
7 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 35 0 R /XYZ 62.69291 369.0236 0 ] /Rect [ 527.0227 648.7736 532.5827 660.7736 ] /Subtype /Link /Type /Annot
>>
endobj
8 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 35 0 R /XYZ 62.69291 270.0236 0 ] /Rect [ 82.69291 630.0236 217.1929 642.0236 ] /Subtype /Link /Type /Annot
>>
endobj
9 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 35 0 R /XYZ 62.69291 270.0236 0 ] /Rect [ 527.0227 630.7736 532.5827 642.7736 ] /Subtype /Link /Type /Annot
>>
endobj
10 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 38 0 R /XYZ 62.69291 663.0236 0 ] /Rect [ 102.6929 612.0236 167.1429 624.0236 ] /Subtype /Link /Type /Annot
>>
endobj
11 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 38 0 R /XYZ 62.69291 663.0236 0 ] /Rect [ 527.0227 612.7736 532.5827 624.7736 ] /Subtype /Link /Type /Annot
>>
endobj
12 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 38 0 R /XYZ 62.69291 213.0236 0 ] /Rect [ 102.6929 594.0236 192.1729 606.0236 ] /Subtype /Link /Type /Annot
>>
endobj
13 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 38 0 R /XYZ 62.69291 213.0236 0 ] /Rect [ 527.0227 594.7736 532.5827 606.7736 ] /Subtype /Link /Type /Annot
>>
endobj
14 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 40 0 R /XYZ 62.69291 581.8236 0 ] /Rect [ 102.6929 576.0236 256.0929 588.0236 ] /Subtype /Link /Type /Annot
>>
endobj
15 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 40 0 R /XYZ 62.69291 581.8236 0 ] /Rect [ 527.0227 576.7736 532.5827 588.7736 ] /Subtype /Link /Type /Annot
>>
endobj
16 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 40 0 R /XYZ 62.69291 357.3176 0 ] /Rect [ 102.6929 558.0236 215.5029 570.0236 ] /Subtype /Link /Type /Annot
>>
endobj
17 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 40 0 R /XYZ 62.69291 357.3176 0 ] /Rect [ 527.0227 558.7736 532.5827 570.7736 ] /Subtype /Link /Type /Annot
>>
endobj
18 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 40 0 R /XYZ 62.69291 172.1176 0 ] /Rect [ 102.6929 540.0236 160.5029 552.0236 ] /Subtype /Link /Type /Annot
>>
endobj
19 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 40 0 R /XYZ 62.69291 172.1176 0 ] /Rect [ 527.0227 540.7736 532.5827 552.7736 ] /Subtype /Link /Type /Annot
>>
endobj
20 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 48 0 R /XYZ 62.69291 615.0236 0 ] /Rect [ 102.6929 522.0236 184.9429 534.0236 ] /Subtype /Link /Type /Annot
>>
endobj
21 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 48 0 R /XYZ 62.69291 615.0236 0 ] /Rect [ 527.0227 522.7736 532.5827 534.7736 ] /Subtype /Link /Type /Annot
>>
endobj
22 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 48 0 R /XYZ 62.69291 447.0236 0 ] /Rect [ 82.69291 504.0236 133.2629 516.0236 ] /Subtype /Link /Type /Annot
>>
endobj
23 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 48 0 R /XYZ 62.69291 447.0236 0 ] /Rect [ 527.0227 504.7736 532.5827 516.7736 ] /Subtype /Link /Type /Annot
>>
endobj
24 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 48 0 R /XYZ 62.69291 264.0236 0 ] /Rect [ 62.69291 486.0236 218.2829 498.0236 ] /Subtype /Link /Type /Annot
>>
endobj
25 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 48 0 R /XYZ 62.69291 264.0236 0 ] /Rect [ 527.0227 486.7736 532.5827 498.7736 ] /Subtype /Link /Type /Annot
>>
endobj
26 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 48 0 R /XYZ 62.69291 234.0236 0 ] /Rect [ 82.69291 468.0236 290.0029 480.0236 ] /Subtype /Link /Type /Annot
>>
endobj
27 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 48 0 R /XYZ 62.69291 234.0236 0 ] /Rect [ 527.0227 468.7736 532.5827 480.7736 ] /Subtype /Link /Type /Annot
>>
endobj
28 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 49 0 R /XYZ 62.69291 519.0236 0 ] /Rect [ 82.69291 450.0236 221.0829 462.0236 ] /Subtype /Link /Type /Annot
>>
endobj
29 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 49 0 R /XYZ 62.69291 519.0236 0 ] /Rect [ 527.0227 450.7736 532.5827 462.7736 ] /Subtype /Link /Type /Annot
>>
endobj
30 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 49 0 R /XYZ 62.69291 274.8661 0 ] /Rect [ 82.69291 432.0236 184.4129 444.0236 ] /Subtype /Link /Type /Annot
>>
endobj
31 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 49 0 R /XYZ 62.69291 274.8661 0 ] /Rect [ 527.0227 432.7736 532.5827 444.7736 ] /Subtype /Link /Type /Annot
>>
endobj
32 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 50 0 R /XYZ 62.69291 633.0236 0 ] /Rect [ 82.69291 414.0236 220.5429 426.0236 ] /Subtype /Link /Type /Annot
>>
endobj
33 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 50 0 R /XYZ 62.69291 633.0236 0 ] /Rect [ 527.0227 414.7736 532.5827 426.7736 ] /Subtype /Link /Type /Annot
>>
endobj
34 0 obj
<<
/BaseFont /Helvetica-BoldOblique /Encoding /WinAnsiEncoding /Name /F3 /Subtype /Type1 /Type /Font
>>
endobj
35 0 obj
<<
/Annots [ 4 0 R 5 0 R 6 0 R 7 0 R 8 0 R 9 0 R 10 0 R 11 0 R 12 0 R 13 0 R 
  14 0 R 15 0 R 16 0 R 17 0 R 18 0 R 19 0 R 20 0 R 21 0 R 22 0 R 23 0 R 
  24 0 R 25 0 R 26 0 R 27 0 R 28 0 R 29 0 R 30 0 R 31 0 R 32 0 R 33 0 R ] /Contents 71 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 70 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
36 0 obj
<<
/BaseFont /Helvetica-Oblique /Encoding /WinAnsiEncoding /Name /F4 /Subtype /Type1 /Type /Font
>>
endobj
37 0 obj
<<
/BaseFont /Courier /Encoding /WinAnsiEncoding /Name /F5 /Subtype /Type1 /Type /Font
>>
endobj
38 0 obj
<<
/Contents 72 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 70 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
39 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://stackoverflow.com/a/1552770)
>> /Border [ 0 0 0 ] /Rect [ 137.9629 106.1176 245.7729 118.1176 ] /Subtype /Link /Type /Annot
>>
endobj
40 0 obj
<<
/Annots [ 39 0 R ] /Contents 73 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 70 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
41 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://winmerge.org/?lang=en)
>> /Border [ 0 0 0 ] /Rect [ 144.9429 543.0236 190.5029 555.0236 ] /Subtype /Link /Type /Annot
>>
endobj
42 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://en.wikipedia.org/wiki/UTF-16)
>> /Border [ 0 0 0 ] /Rect [ 370.6029 525.0236 411.7422 537.0236 ] /Subtype /Link /Type /Annot
>>
endobj
43 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://en.wikipedia.org/wiki/UTF-8)
>> /Border [ 0 0 0 ] /Rect [ 114.3929 513.0236 142.6618 525.0236 ] /Subtype /Link /Type /Annot
>>
endobj
44 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://en.wikipedia.org/wiki/ASCII)
>> /Border [ 0 0 0 ] /Rect [ 289.7129 513.0236 315.5581 525.0236 ] /Subtype /Link /Type /Annot
>>
endobj
45 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://en.wikipedia.org/wiki/Mojibake)
>> /Border [ 0 0 0 ] /Rect [ 138.5129 501.0236 178.5229 513.0236 ] /Subtype /Link /Type /Annot
>>
endobj
46 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 35 0 R /XYZ 62.69291 272.5236 0 ] /Rect [ 453.9729 111.0236 530.2558 123.0236 ] /Subtype /Link /Type /Annot
>>
endobj
47 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 35 0 R /XYZ 62.69291 272.5236 0 ] /Rect [ 62.69291 99.02362 146.0529 111.0236 ] /Subtype /Link /Type /Annot
>>
endobj
48 0 obj
<<
/Annots [ 41 0 R 42 0 R 43 0 R 44 0 R 45 0 R 46 0 R 47 0 R ] /Contents 74 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 70 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
49 0 obj
<<
/Contents 75 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 70 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
50 0 obj
<<
/Contents 76 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 70 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
51 0 obj
<<
/Outlines 53 0 R /PageLabels 77 0 R /PageMode /UseNone /Pages 70 0 R /Type /Catalog
>>
endobj
52 0 obj
<<
/Author (Daryl Posnett) /CreationDate (D:20200720152720+08'00') /Creator (\(unspecified\)) /Keywords () /ModDate (D:20200720152720+08'00') /Producer (ReportLab PDF Library - www.reportlab.com) 
  /Subject (\(unspecified\)) /Title () /Trapped /False
>>
endobj
53 0 obj
<<
/Count 20 /First 54 0 R /Last 54 0 R /Type /Outlines
>>
endobj
54 0 obj
<<
/Count 15 /Dest [ 35 0 R /XYZ 62.69291 708.0236 0 ] /First 55 0 R /Last 65 0 R /Parent 53 0 R /Title (ECS 154A - Lab 3 SS1 2020)
>>
endobj
55 0 obj
<<
/Count 9 /Dest [ 35 0 R /XYZ 62.69291 399.0236 0 ] /First 56 0 R /Last 64 0 R /Next 65 0 R /Parent 54 0 R 
  /Title (Logistics)
>>
endobj
56 0 obj
<<
/Dest [ 35 0 R /XYZ 62.69291 369.0236 0 ] /Next 57 0 R /Parent 55 0 R /Title (Submission)
>>
endobj
57 0 obj
<<
/Count 6 /Dest [ 35 0 R /XYZ 62.69291 270.0236 0 ] /First 58 0 R /Last 63 0 R /Next 64 0 R /Parent 55 0 R 
  /Prev 56 0 R /Title (Debugging Sequential Circuits)
>>
endobj
58 0 obj
<<
/Dest [ 38 0 R /XYZ 62.69291 663.0236 0 ] /Next 59 0 R /Parent 57 0 R /Title (Tester Circuits)
>>
endobj
59 0 obj
<<
/Dest [ 38 0 R /XYZ 62.69291 213.0236 0 ] /Next 60 0 R /Parent 57 0 R /Prev 58 0 R /Title (Testing Output Files)
>>
endobj
60 0 obj
<<
/Dest [ 40 0 R /XYZ 62.69291 581.8236 0 ] /Next 61 0 R /Parent 57 0 R /Prev 59 0 R /Title (Generating Your Own Output Files)
>>
endobj
61 0 obj
<<
/Dest [ 40 0 R /XYZ 62.69291 357.3176 0 ] /Next 62 0 R /Parent 57 0 R /Prev 60 0 R /Title (Checking for Correctness)
>>
endobj
62 0 obj
<<
/Dest [ 40 0 R /XYZ 62.69291 172.1176 0 ] /Next 63 0 R /Parent 57 0 R /Prev 61 0 R /Title (Line Endings)
>>
endobj
63 0 obj
<<
/Dest [ 48 0 R /XYZ 62.69291 615.0236 0 ] /Parent 57 0 R /Prev 62 0 R /Title (PowerShell Issues)
>>
endobj
64 0 obj
<<
/Dest [ 48 0 R /XYZ 62.69291 447.0236 0 ] /Parent 55 0 R /Prev 57 0 R /Title (Constraints)
>>
endobj
65 0 obj
<<
/Count 4 /Dest [ 48 0 R /XYZ 62.69291 264.0236 0 ] /First 66 0 R /Last 69 0 R /Parent 54 0 R /Prev 55 0 R 
  /Title (Logisim Evolution Problems [75])
>>
endobj
66 0 obj
<<
/Dest [ 48 0 R /XYZ 62.69291 234.0236 0 ] /Next 67 0 R /Parent 65 0 R /Title (1. Quick introduction to sequential circuitry [10])
>>
endobj
67 0 obj
<<
/Dest [ 49 0 R /XYZ 62.69291 519.0236 0 ] /Next 68 0 R /Parent 65 0 R /Prev 66 0 R /Title (2. Register implementation [15])
>>
endobj
68 0 obj
<<
/Dest [ 49 0 R /XYZ 62.69291 274.8661 0 ] /Next 69 0 R /Parent 65 0 R /Prev 67 0 R /Title (3. Parity generator [20])
>>
endobj
69 0 obj
<<
/Dest [ 50 0 R /XYZ 62.69291 633.0236 0 ] /Parent 65 0 R /Prev 68 0 R /Title (4. Bit sequence recognizer [30])
>>
endobj
70 0 obj
<<
/Count 6 /Kids [ 35 0 R 38 0 R 40 0 R 48 0 R 49 0 R 50 0 R ] /Type /Pages
>>
endobj
71 0 obj
<<
/Length 6926
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 750.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 36.93937 0 Td (Author:) Tj T* -36.93937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Daryl Posnett) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 735.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 22.48937 0 Td (Copyright:) Tj T* -22.48937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (\251 2020 Daryl Posnett, forked from CC repo by Justin Perona) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 720.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 32.46937 0 Td (License:) Tj T* -32.46937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (CC BY-NC 4.0) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 687.0236 cm
q
BT 1 0 0 1 0 3.5 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (ECS 154A - Lab 3 SS1 2020) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 411.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 0 255 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 .501961 rg (Logistics) Tj T* ET
Q
Q
q
1 0 0 1 397.8898 255 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 66.44 0 Td (1) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 237 cm
q
BT 1 0 0 1 20 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Submission) Tj T* ET
Q
Q
q
1 0 0 1 397.8898 237 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (1) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 219 cm
q
BT 1 0 0 1 20 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Debugging Sequential Circuits) Tj T* ET
Q
Q
q
1 0 0 1 397.8898 219 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (1) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 201 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Tester Circuits) Tj T* ET
Q
Q
q
1 0 0 1 397.8898 201 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (2) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 183 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Testing Output Files) Tj T* ET
Q
Q
q
1 0 0 1 397.8898 183 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (2) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 165 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Generating Your Own Output Files) Tj T* ET
Q
Q
q
1 0 0 1 397.8898 165 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (3) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 147 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Checking for Correctness) Tj T* ET
Q
Q
q
1 0 0 1 397.8898 147 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (3) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 129 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Line Endings) Tj T* ET
Q
Q
q
1 0 0 1 397.8898 129 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (3) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 111 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (PowerShell Issues) Tj T* ET
Q
Q
q
1 0 0 1 397.8898 111 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (4) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 93 cm
q
BT 1 0 0 1 20 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Constraints) Tj T* ET
Q
Q
q
1 0 0 1 397.8898 93 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (4) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 75 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 .501961 rg (Logisim Evolution Problems [75]) Tj T* ET
Q
Q
q
1 0 0 1 397.8898 75 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 66.44 0 Td (4) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 57 cm
q
BT 1 0 0 1 20 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (1. Quick introduction to sequential circuitry [10]) Tj T* ET
Q
Q
q
1 0 0 1 397.8898 57 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (4) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 39 cm
q
BT 1 0 0 1 20 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (2. Register implementation [15]) Tj T* ET
Q
Q
q
1 0 0 1 397.8898 39 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (5) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 21 cm
q
BT 1 0 0 1 20 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (3. Parity generator [20]) Tj T* ET
Q
Q
q
1 0 0 1 397.8898 21 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (5) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 3 cm
q
BT 1 0 0 1 20 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (4. Bit sequence recognizer [30]) Tj T* ET
Q
Q
q
1 0 0 1 397.8898 3 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (6) Tj T* -66.44 0 Td ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 381.0236 cm
q
BT 1 0 0 1 0 3 Tm 18 TL /F2 15 Tf 0 0 0 rg (Logistics) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 354.0236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F3 12.5 Tf 0 0 0 rg (Submission) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 324.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .565444 Tw (Due by 20:00 on Wed, 2020-07-29. Note: This due date will be the same for lab 4, this is to allow you to) Tj T* 0 Tw (plan your time. This lab has been significantly shortened for the current situation.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 282.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL 2.238735 Tw (Turn in for the Logisim Evolution portion is on Gradescope. Submit the specified .circ files for each) Tj T* 0 Tw .686136 Tw (problem. The person submitting should specify their partner's name \(if necessary\) during the submission) Tj T* 0 Tw (process.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 255.0236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F3 12.5 Tf 0 0 0 rg (Debugging Sequential Circuits) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 213.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL .860514 Tw (Debugging for the next two labs is going to look significantly different than the first two labs. As you will) Tj T* 0 Tw 2.353516 Tw (note, no vector files have been provided with this lab. This is because test vectors don't work with) Tj T* 0 Tw (sequential circuits, so we can't use them to test anymore.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 171.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL .450514 Tw (You will want to debug within Logisim as we have been doing for the last question from lab 2. Submitting) Tj T* 0 Tw .554651 Tw (via Gradescope will continue to grade your problem appropriately, but the autograder can't give you your) Tj T* 0 Tw (output.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 105.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 50 Tm /F1 10 Tf 12 TL .637485 Tw (You can simulate debugging as is done in the autograder by creating tester circuits and expected output) Tj T* 0 Tw .726179 Tw (files. A simple tester file and output file is provided for some of the problems. This is there to give you a) Tj T* 0 Tw .213626 Tw (model of how to create your own tester files. For this lab this may not be necessary, for the final lab it will.) Tj T* 0 Tw .075542 Tw (Understanding how to test your circuits on your own is an important part of learning how to avoid mistakes) Tj T* 0 Tw (during the design process.) Tj T* ET
Q
Q
 
endstream
endobj
72 0 obj
<<
/Length 9331
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 741.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .187882 Tw (To help you to continue debugging your circuits and learn how to do this yourself, we will provide you with) Tj T* 0 Tw (two files for some of the circuits:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 735.0236 cm
Q
q
1 0 0 1 62.69291 735.0236 cm
Q
q
1 0 0 1 62.69291 723.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (tester circuits \(in the ) Tj /F4 10 Tf (tester/) Tj /F1 10 Tf ( subdirectory\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 717.0236 cm
Q
q
1 0 0 1 62.69291 705.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (tester output files \(in the ) Tj /F4 10 Tf (tsv/) Tj /F1 10 Tf ( subdirectory\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 705.0236 cm
Q
q
1 0 0 1 62.69291 675.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .349984 Tw (You should continue to implement your circuits in the base circuits provided. The autograder will continue) Tj T* 0 Tw (to expect your submission files in the same format that you have been submitting them before.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 651.0236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F3 10 Tf 0 0 0 rg (Tester Circuits) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 609.0236 cm
q
BT 1 0 0 1 0 26 Tm 2.13881 Tw 12 TL /F1 10 Tf 0 0 0 rg (In the ) Tj /F4 10 Tf (tester/) Tj /F1 10 Tf ( subdirectory, you will find tester circuits that will help you generate output to test your) Tj T* 0 Tw .329036 Tw (submission. To do so, you will need to load the circuit you are working on into the tester circuit. To load a) Tj T* 0 Tw (circuit, follow the steps below:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 603.0236 cm
Q
q
1 0 0 1 62.69291 603.0236 cm
Q
q
1 0 0 1 62.69291 591.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 5.66 0 Td (1.) Tj T* -5.66 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Open the relevant tester circuit in Logisim Evolution.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 585.0236 cm
Q
q
1 0 0 1 62.69291 573.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 5.66 0 Td (2.) Tj T* -5.66 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (In the menu bar of Logisim Evolution, click on ) Tj /F4 10 Tf (Project) Tj /F1 10 Tf (.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 567.0236 cm
Q
q
1 0 0 1 62.69291 555.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 5.66 0 Td (3.) Tj T* -5.66 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (From there, click on ) Tj /F4 10 Tf (Load Library) Tj /F1 10 Tf (, then ) Tj /F4 10 Tf (Logisim-evolution Library...) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 549.0236 cm
Q
q
1 0 0 1 62.69291 537.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 5.66 0 Td (4.) Tj T* -5.66 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Select your submission file. It is now loaded into the tester circuit as a subcircuit.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 531.0236 cm
Q
q
1 0 0 1 62.69291 519.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 5.66 0 Td (5.) Tj T* -5.66 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (In the side bar of Logisim Evolution with all the libraries, scroll down to the bottom.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 513.0236 cm
Q
q
1 0 0 1 62.69291 489.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 5.66 0 Td (6.) Tj T* -5.66 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 14 Tm .639988 Tw 12 TL /F1 10 Tf 0 0 0 rg (Open the folder with your circuit name \() Tj /F4 10 Tf (1) Tj /F1 10 Tf (, ) Tj /F4 10 Tf (2) Tj /F1 10 Tf (, so on\), and click on the name of the subcircuit for that) Tj T* 0 Tw (problem that shows up.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 483.0236 cm
Q
q
1 0 0 1 62.69291 411.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 57 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 5.66 0 Td (7.) Tj T* -5.66 0 Td ET
Q
Q
q
1 0 0 1 23 45 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .790651 Tw (Place the subcircuit inside the tester circuit where it says "Place your subcircuit here," making sure) Tj T* 0 Tw (the wires align.) Tj T* ET
Q
Q
q
1 0 0 1 23 39 cm
Q
q
1 0 0 1 23 39 cm
Q
q
1 0 0 1 23 27 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (You should not have to edit anything inside the tester circuit for it to work.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 23 21 cm
Q
q
1 0 0 1 23 -3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .302339 Tw (If all the pins don't align or there is a wire mismatch, you moved, added, removed, or otherwise) Tj T* 0 Tw (changed a pin inside your submission circuit.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 23 -3 cm
Q
q
Q
Q
q
1 0 0 1 62.69291 411.0236 cm
Q
q
1 0 0 1 62.69291 381.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .509461 Tw (If you make edits to your submission circuit and want to retest it, you should unload your circuit and then) Tj T* 0 Tw (reload it back into the tester circuit. To unload your circuit, follow the steps below:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 375.0236 cm
Q
q
1 0 0 1 62.69291 375.0236 cm
Q
q
1 0 0 1 62.69291 345.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 15 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 5.66 0 Td (1.) Tj T* -5.66 0 Td ET
Q
Q
q
1 0 0 1 23 15 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Delete your subcircuit that you placed inside the tester circuit.) Tj T* ET
Q
Q
q
1 0 0 1 23 9 cm
Q
q
1 0 0 1 23 9 cm
Q
q
1 0 0 1 23 -3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Logisim Evolution won't let you unload your circuit if a subcircuit is still inside the tester circuit.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 23 -3 cm
Q
q
Q
Q
q
1 0 0 1 62.69291 339.0236 cm
Q
q
1 0 0 1 62.69291 327.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 5.66 0 Td (2.) Tj T* -5.66 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Right-click the containing folder that you opened earlier to place the subcircuit.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 321.0236 cm
Q
q
1 0 0 1 62.69291 309.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 5.66 0 Td (3.) Tj T* -5.66 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Select ) Tj /F4 10 Tf (Unload Circuit) Tj /F1 10 Tf ( to unload it.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 309.0236 cm
Q
q
1 0 0 1 62.69291 267.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL .868221 Tw (Once you have unloaded your circuit, reload it following the steps above. Note that you'll see a "Reload) Tj T* 0 Tw 1.327485 Tw (Circuit" option. In my experience, it's not very consistent in correctly reloading the circuit, so I wouldn't) Tj T* 0 Tw (recommend it.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 225.0236 cm
q
BT 1 0 0 1 0 26 Tm -0.01472 Tw 12 TL /F2 10 Tf 0 0 0 rg (Do not modify anything inside the testing circuit!) Tj /F1 10 Tf ( The only thing you should do is load your submission) Tj T* 0 Tw .165542 Tw (and place it in the indicated spot. Just like with the autograder, moving pins around can cause your output) Tj T* 0 Tw (to change. The output of ) Tj /F5 10 Tf (diff) Tj /F1 10 Tf ( \(more on that below\) won't be helpful if you move anything around.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 201.0236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F3 10 Tf 0 0 0 rg (Testing Output Files) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 147.0236 cm
q
BT 1 0 0 1 0 38 Tm 2.519269 Tw 12 TL /F1 10 Tf 0 0 0 rg (In the ) Tj /F4 10 Tf (tsv/) Tj /F1 10 Tf ( subdirectory, you will find appropriately named TSV \(tab-separated values\) files with the) Tj T* 0 Tw .104104 Tw (expected output of your circuit. Once you have generated an output using the testing circuit, you will ) Tj /F5 10 Tf (diff) Tj /F1 10 Tf  T* 0 Tw .237356 Tw (your output against the correct one. See the next section for how to generate the output and how to ) Tj /F5 10 Tf (diff) Tj /F1 10 Tf  T* 0 Tw (them.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 117.0236 cm
q
BT 1 0 0 1 0 14 Tm .145251 Tw 12 TL /F1 10 Tf 0 0 0 rg (The output files look similar to the test vector files that you've been using in the past. Each row represents) Tj T* 0 Tw (one set of values at a given time. As an example, the first few lines of ) Tj /F4 10 Tf (2.tsv) Tj /F1 10 Tf ( are:) Tj T* ET
Q
Q
 
endstream
endobj
73 0 obj
<<
/Length 7509
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 703.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 60 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 38 Tm /F5 10 Tf 12 TL (1001 1010   0       0000 0000) Tj T* (1111 0111   1       1001 1010) Tj T* (1111 0111   0       1001 1010) Tj T* (1000 1111   1       1111 0111) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 635.8236 cm
q
BT 1 0 0 1 0 50 Tm .46561 Tw 12 TL /F1 10 Tf 0 0 0 rg (Unfortunately, Logisim Evolution does not attach signal names to its output. From left to right, the signals) Tj T* 0 Tw .067988 Tw (will be in the same order as the ones listed in the description for each problem. Input values will always be) Tj T* 0 Tw .566179 Tw (to the left of output values. Values with more than 4 bits will have a space in between every 4 bits, while) Tj T* 0 Tw -0.125015 Tw (columns will have tabs between them. As an example, the first eight bits above correspond to ) Tj /F4 10 Tf (eightbitinput) Tj /F1 10 Tf (,) Tj T* 0 Tw (then the next bit is for ) Tj /F4 10 Tf (sysclock) Tj /F1 10 Tf (, and finally the last eight bits correspond to ) Tj /F4 10 Tf (registerval) Tj /F1 10 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 593.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL .195227 Tw (The nice thing about TSV files is that you can open them in a spreadsheet editor like Excel. If you make a) Tj T* 0 Tw .455488 Tw (copy of it, you can then add the signal names or any other metadata you want. This might make it easier) Tj T* 0 Tw (for you to debug, but make sure not to modify the original TSV file.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 569.8236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F3 10 Tf 0 0 0 rg (Generating Your Own Output Files) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 539.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 1.389431 Tw (Once you have loaded your circuit, it's time to generate your output file to check if your submission is) Tj T* 0 Tw (correct. In your favorite terminal \(I use Konsole on Kubuntu\), use the following commands:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 503.3176 cm
q
q
.766291 0 0 .766291 0 0 cm
q
1 0 0 1 6.6 8.612914 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 612 36 re B*
Q
q
.960784 .960784 .862745 rg
n 60 12 162 12 re f*
.960784 .960784 .862745 rg
n 252 12 102 12 re f*
.960784 .960784 .862745 rg
n 468 12 108 12 re f*
.960784 .960784 .862745 rg
n 30 0 108 12 re f*
.960784 .960784 .862745 rg
n 168 0 90 12 re f*
BT 1 0 0 1 0 14 Tm 12 TL /F5 10 Tf 0 0 0 rg (java -jar ) Tj .729412 .129412 .129412 rg ('path-to-logisim-evolution') Tj 0 0 0 rg (.jar ) Tj .729412 .129412 .129412 rg ('testing-circuit') Tj 0 0 0 rg (.circ -tty table ) Tj (>) Tj ( ) Tj .729412 .129412 .129412 rg ('output-file-name') Tj 0 0 0 rg (.txt) Tj T* (diff ) Tj .729412 .129412 .129412 rg ('output-file-name') Tj 0 0 0 rg (.txt ) Tj .729412 .129412 .129412 rg ('tester-output') Tj 0 0 0 rg (.txt) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 471.3176 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL -0.001591 Tw (Replace the portions with quotes with the appropriate paths. Java needs to be in your system path if it isn't) Tj T* 0 Tw (already. These commands do the following:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 465.3176 cm
Q
q
1 0 0 1 62.69291 465.3176 cm
Q
q
1 0 0 1 62.69291 453.3176 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (run the main circuit of the testing circuit in the background) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 447.3176 cm
Q
q
1 0 0 1 62.69291 435.3176 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (print out the output of the pins in the circuit to ) Tj /F5 10 Tf (stdout) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 429.3176 cm
Q
q
1 0 0 1 62.69291 417.3176 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (pipe ) Tj /F5 10 Tf (stdout) Tj /F1 10 Tf ( to your specified file) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 411.3176 cm
Q
q
1 0 0 1 62.69291 399.3176 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (diff) Tj /F1 10 Tf ( that file with the correct output for that problem) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 399.3176 cm
Q
q
1 0 0 1 62.69291 369.3176 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 2.131098 Tw (If you're familiar with bash scripting, you can turn the above into a script to save some time. Using) Tj T* 0 Tw (command line arguments for that script could let you reuse the script between circuits.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 345.3176 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F3 10 Tf 0 0 0 rg (Checking for Correctness) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 315.3176 cm
q
BT 1 0 0 1 0 14 Tm .79061 Tw 12 TL /F1 10 Tf 0 0 0 rg (Let's do an example. Say you wanted to test ) Tj /F4 10 Tf (base/1.circ) Tj /F1 10 Tf ( after loading it into ) Tj /F4 10 Tf (tester/1tester.circ) Tj /F1 10 Tf ( and ) Tj /F5 10 Tf (diff) Tj /F1 10 Tf  T* 0 Tw (that with ) Tj /F4 10 Tf (tsv/1.tsv) Tj /F1 10 Tf (. The commands would look like the following:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 270.1176 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 36 re B*
Q
q
BT 1 0 0 1 0 14 Tm 12 TL /F5 10 Tf 0 0 0 rg (java -jar logisim-evolution.jar tester/1tester.circ -tty table ) Tj (>) Tj ( test1.txt) Tj T* (diff test1.txt tsv/1.tsv) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 226.1176 cm
q
BT 1 0 0 1 0 26 Tm 2.072651 Tw 12 TL /F1 10 Tf 0 0 0 rg (Assuming you haven't moved anything in the tester circuit, when you generate your output, only the) Tj T* 0 Tw -0.098765 Tw (columns for output pins should have any differences. You can use the output ) Tj /F5 10 Tf (diff) Tj /F1 10 Tf ( generates to determine) Tj T* 0 Tw (where your circuit is going wrong.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 184.1176 cm
q
BT 1 0 0 1 0 26 Tm .674651 Tw 12 TL /F1 10 Tf 0 0 0 rg (If ) Tj /F5 10 Tf (diff) Tj /F1 10 Tf ( reports no changes, then congratulations! Your implementation is correct and you should get full) Tj T* 0 Tw .621163 Tw (credit when you submit to Gradescope. Make sure to submit the circuit files you've been working on and) Tj T* 0 Tw (not the tester circuits; the autograder will ignore those.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 160.1176 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F3 10 Tf 0 0 0 rg (Line Endings) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 106.1176 cm
q
BT 1 0 0 1 0 38 Tm .408935 Tw 12 TL /F1 10 Tf 0 0 0 rg (Note that the TSV files have Unix \(LF\) line endings. If you are running Windows, you'll need to be careful) Tj T* 0 Tw 1.055318 Tw (about this, as evidenced by one post on Campuswire already. Windows \(CRLF\) line endings will cause) Tj T* 0 Tw .074274 Tw /F5 10 Tf (diff) Tj /F1 10 Tf ( to fail as the output does not match exactly. It will look like there's an error on every single line when) Tj T* 0 Tw (there really isn't. ) Tj 0 0 .501961 rg (This StackOverflow post) Tj 0 0 0 rg ( contains more information about it in case you're curious.) Tj T* ET
Q
Q
 
endstream
endobj
74 0 obj
<<
/Length 8088
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 705.0236 cm
q
BT 1 0 0 1 0 50 Tm 1.219318 Tw 12 TL /F1 10 Tf 0 0 0 rg (The autograder doesn't have line ending problems, as your output is generated and then checked with) Tj T* 0 Tw -0.083346 Tw /F5 10 Tf (diff) Tj /F1 10 Tf ( in a purely Unix environment. If it doesn't pass the autograder, then there's another issue going on. If) Tj T* 0 Tw -0.086855 Tw (your circuit passes the autograder but is "incorrect" on every single line when you use ) Tj /F5 10 Tf (diff) Tj /F1 10 Tf (, then it's a line) Tj T* 0 Tw 1.769985 Tw (ending problem. If you're running on Windows and are experiencing this issue, you have a couple of) Tj T* 0 Tw (options:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 699.0236 cm
Q
q
1 0 0 1 62.69291 699.0236 cm
Q
q
1 0 0 1 62.69291 675.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .372651 Tw (clone the repository using GitHub Desktop or another Git client that will properly handle line endings) Tj T* 0 Tw (on Windows for you) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 669.0236 cm
Q
q
1 0 0 1 62.69291 657.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (use a text editor like Sublime Text, Atom, or Notepad++ to convert the TSV files to CRLF line endings) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 651.0236 cm
Q
q
1 0 0 1 62.69291 627.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .277765 Tw (copy the contents of the TSV file and paste into Notepad/other text editor to resave it with CRLF line) Tj T* 0 Tw (endings) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 627.0236 cm
Q
q
1 0 0 1 62.69291 603.0236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F3 10 Tf 0 0 0 rg (PowerShell Issues) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 573.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .383735 Tw (This section is only relevant if you're using PowerShell on Windows. See how Microsoft keeps coming up) Tj T* 0 Tw (as a problem?) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 543.0236 cm
q
BT 1 0 0 1 0 14 Tm 2.846412 Tw 12 TL /F1 10 Tf 0 0 0 rg (I've had significant problems with trying to use ) Tj /F5 10 Tf (diff) Tj /F1 10 Tf ( or ) Tj /F5 10 Tf (Compare-Object) Tj /F1 10 Tf ( in PowerShell. I would) Tj T* 0 Tw (recommend using ) Tj 0 0 .501961 rg (WinMerge) Tj 0 0 0 rg ( on Windows instead. It's a far better ) Tj /F5 10 Tf (diff) Tj /F1 10 Tf ( tool.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 501.0236 cm
q
BT 1 0 0 1 0 26 Tm .604104 Tw 12 TL /F1 10 Tf 0 0 0 rg (The default file encoding for output files via redirects in PowerShell is ) Tj 0 0 .501961 rg (UTF-16) Tj 0 0 0 rg (. The original TSV files are) Tj T* 0 Tw -0.030539 Tw (encoded in ) Tj 0 0 .501961 rg (UTF-8) Tj 0 0 0 rg (, since that's just an extension of ) Tj 0 0 .501961 rg (ASCII) Tj 0 0 0 rg (. If your text editor attempts to interpret the file as) Tj T* 0 Tw (UTF-8, you'll get ) Tj 0 0 .501961 rg (mojibake) Tj 0 0 0 rg (.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 459.0236 cm
q
BT 1 0 0 1 0 26 Tm .289431 Tw 12 TL /F1 10 Tf 0 0 0 rg (Thankfully, ) Tj /F5 10 Tf (diff) Tj /F1 10 Tf ( will make it pretty clear that there's an issue if the encoding is different. If you're running) Tj T* 0 Tw .732927 Tw (on Windows and are experiencing this issue, use a text editor like Sublime Text, Atom, or Notepad++ to) Tj T* 0 Tw (change the encoding to UTF-8 and resave.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 432.0236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F3 12.5 Tf 0 0 0 rg (Constraints) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 414.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (For these problems, you must use designs relying on only the following, unless specified otherwise:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 408.0236 cm
Q
q
1 0 0 1 62.69291 408.0236 cm
Q
q
1 0 0 1 62.69291 396.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (AND, OR, and NOT gates) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 390.0236 cm
Q
q
1 0 0 1 62.69291 378.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (flip flops of any type) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 372.0236 cm
Q
q
1 0 0 1 62.69291 360.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (the Logisim Evolution wiring library) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 360.0236 cm
Q
q
1 0 0 1 62.69291 330.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .74408 Tw (If you want to use a NOR/NAND gate, implement it via AND, OR, and NOT gates. You will get a 0 on a) Tj T* 0 Tw (problem if you violate the constraints above, unless specified otherwise.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 276.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 38 Tm /F1 10 Tf 12 TL .506654 Tw (Certain problems have constraints on the number of certain types of gates or flip flops that you may use.) Tj T* 0 Tw 1.000542 Tw (Make sure to read those carefully. Those gates may have any number of inputs, but you are limited on) Tj T* 0 Tw .290488 Tw (how many of them you can use. This is to enforce minimization of the circuits. If you exceed the limit, you) Tj T* 0 Tw (will lose a significant amount of points for that problem.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 246.0236 cm
q
BT 1 0 0 1 0 3 Tm 18 TL /F2 15 Tf 0 0 0 rg (Logisim Evolution Problems [75]) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 219.0236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F3 12.5 Tf 0 0 0 rg (1. Quick introduction to sequential circuitry [10]) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 207.0236 cm
Q
q
1 0 0 1 62.69291 207.0236 cm
Q
q
1 0 0 1 62.69291 195.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Submission file for this part: ) Tj /F4 10 Tf (1.circ) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 189.0236 cm
Q
q
1 0 0 1 62.69291 177.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Main circuit name: ) Tj /F4 10 Tf (chaining) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 171.0236 cm
Q
q
1 0 0 1 62.69291 159.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Input pin\(s\): ) Tj /F4 10 Tf (q) Tj /F1 10 Tf ( [1], ) Tj /F4 10 Tf (sysclock) Tj /F1 10 Tf ( [1]) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 153.0236 cm
Q
q
1 0 0 1 62.69291 141.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Output pin\(s\): ) Tj /F4 10 Tf (q1ago) Tj /F1 10 Tf ( [1], ) Tj /F4 10 Tf (q2ago) Tj /F1 10 Tf ( [1]) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 141.0236 cm
Q
q
1 0 0 1 62.69291 99.02362 cm
q
BT 1 0 0 1 0 26 Tm 2.064985 Tw 12 TL /F1 10 Tf 0 0 0 rg (I highly recommend starting this problem early. The intent of this problem is to introduce the testing) Tj T* 0 Tw 2.326905 Tw (mechanisms for sequential circuits and making sure you understand those well. See the ) Tj 0 0 .501961 rg (Debugging) Tj T* 0 Tw (Sequential Circuits) Tj 0 0 0 rg ( section above for more information on those.) Tj T* ET
Q
Q
 
endstream
endobj
75 0 obj
<<
/Length 9068
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 705.0236 cm
q
BT 1 0 0 1 0 50 Tm .117132 Tw 12 TL /F1 10 Tf 0 0 0 rg (Hook up two D flip flops in sequence; this is equivalent to a two-bit shift register. The input into the first flip) Tj T* 0 Tw .563626 Tw (flop is ) Tj /F4 10 Tf (q) Tj /F1 10 Tf (. The output of the first flip flop and input into the second flip flop becomes ) Tj /F4 10 Tf (q1ago) Tj /F1 10 Tf (, the value of ) Tj /F4 10 Tf (q) Tj /F1 10 Tf  T* 0 Tw .94683 Tw (one clock cycle ago. The output of the second flip flop becomes ) Tj /F4 10 Tf (q2ago) Tj /F1 10 Tf (, the value of ) Tj /F4 10 Tf (q) Tj /F1 10 Tf ( two clock cycles) Tj T* 0 Tw 1.49311 Tw (ago. This chaining/shifting will be reflected in your output file from the tester, assuming you've done it) Tj T* 0 Tw (correctly.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 663.0236 cm
q
BT 1 0 0 1 0 26 Tm -0.040011 Tw 12 TL /F1 10 Tf 0 0 0 rg (Note that we provide a ) Tj /F4 10 Tf (sysclock) Tj /F1 10 Tf ( input to hook up to the Clock pins of your flip flops. This is required so that) Tj T* 0 Tw .54104 Tw (the tester circuit and your circuit run in lockstep. However, if you are testing inside your own circuit file, it) Tj T* 0 Tw (will be more convenient for you to use a regular Clock element rather than ) Tj /F4 10 Tf (sysclock) Tj /F1 10 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 645.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If you do test inside your own circuit, some helpful commands are below:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 639.0236 cm
Q
q
1 0 0 1 62.69291 639.0236 cm
Q
q
1 0 0 1 62.69291 627.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (Ctrl-T) Tj /F1 10 Tf ( ticks the clock once forwards.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 621.0236 cm
Q
q
1 0 0 1 62.69291 597.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 14 Tm 2.272126 Tw 12 TL /F5 10 Tf 0 0 0 rg (Ctrl-K) Tj /F1 10 Tf ( repeatedly ticks the clock at a specified frequency. You can change this frequency by) Tj T* 0 Tw (clicking on ) Tj /F4 10 Tf (Simulate) Tj /F1 10 Tf ( in the top menu bar, then clicking on ) Tj /F4 10 Tf (Tick Frequency.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 591.0236 cm
Q
q
1 0 0 1 62.69291 579.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (Ctrl-R) Tj /F1 10 Tf ( resets the circuit and all your flip flops.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 573.0236 cm
Q
q
1 0 0 1 62.69291 561.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F5 10 Tf 0 0 0 rg (Ctrl-D) Tj /F1 10 Tf ( duplicates a component.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 561.0236 cm
Q
q
1 0 0 1 62.69291 531.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .805227 Tw (You may only use two D flip flip flops to store your values. You may not use any other module from the) Tj T* 0 Tw (Memory library or use more than 2 D flip flops. Doing so will result in a 0.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 504.0236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F3 12.5 Tf 0 0 0 rg (2. Register implementation [15]) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 492.0236 cm
Q
q
1 0 0 1 62.69291 492.0236 cm
Q
q
1 0 0 1 62.69291 480.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Submission file for this part: ) Tj /F4 10 Tf (2.circ) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 478.8661 cm
Q
q
1 0 0 1 62.69291 466.8661 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Main circuit name: ) Tj /F4 10 Tf (tregister) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 460.8661 cm
Q
q
1 0 0 1 62.69291 448.8661 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Input pin\(s\): ) Tj /F4 10 Tf (eightbitinput) Tj /F1 10 Tf ( [8], ) Tj /F4 10 Tf (sysclock) Tj /F1 10 Tf ( [1]) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 442.8661 cm
Q
q
1 0 0 1 62.69291 430.8661 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Output pin\(s\): ) Tj /F4 10 Tf (registerval) Tj /F1 10 Tf ( [8]) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 430.8661 cm
Q
q
1 0 0 1 62.69291 376.8661 cm
q
0 0 0 rg
BT 1 0 0 1 0 38 Tm /F1 10 Tf 12 TL -0.01668 Tw (Design a eight-bit register that uses T flip flops to store its values. This implementation differs from the one) Tj T* 0 Tw .802619 Tw (talked about in lecture, which used D flip flops. The register starts out with 0000 0000 \(all zeroes\) as its) Tj T* 0 Tw .011488 Tw (first value. Note that your register does not have an enable input and will thus write its input on every clock) Tj T* 0 Tw (cycle.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 346.8661 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL -0.129512 Tw (As an exercise, I encourage you to think about what would be necessary in order to add an enable input as) Tj T* 0 Tw (it's straightforward to do so.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 316.8661 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .223322 Tw (You may only use 8 T flip flops to store your values. You may not use any other module from the Memory) Tj T* 0 Tw (library or use more than 8 T flip flops. Doing so will result in a 0.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 286.8661 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 1.036303 Tw (You may use XOR gates in addition to the AND, OR, and NOT gates you are normally allowed to use.) Tj T* 0 Tw (There is no limit on the number of those gates you may use.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 259.8661 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F3 12.5 Tf 0 0 0 rg (3. Parity generator [20]) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 247.8661 cm
Q
q
1 0 0 1 62.69291 247.8661 cm
Q
q
1 0 0 1 62.69291 235.8661 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Submission file for this part: ) Tj /F4 10 Tf (3.circ) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 229.8661 cm
Q
q
1 0 0 1 62.69291 217.8661 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Main circuit name: ) Tj /F4 10 Tf (paritygen) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 211.8661 cm
Q
q
1 0 0 1 62.69291 199.8661 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Input pin\(s\): ) Tj /F4 10 Tf (inputw) Tj /F1 10 Tf ( [1], ) Tj /F4 10 Tf (sysclock) Tj /F1 10 Tf ( [1]) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 193.8661 cm
Q
q
1 0 0 1 62.69291 181.8661 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Output pin\(s\): ) Tj /F4 10 Tf (outputq) Tj /F1 10 Tf ( [1]) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 181.8661 cm
Q
q
1 0 0 1 62.69291 127.8661 cm
q
BT 1 0 0 1 0 38 Tm .910542 Tw 12 TL /F1 10 Tf 0 0 0 rg (Derive a minimal state table for a Moore model FSM that acts as a three-bit parity generator. For every) Tj T* 0 Tw .01436 Tw (three bits that are observed on ) Tj /F4 10 Tf (inputw) Tj /F1 10 Tf ( during three consecutive clock cycles, the FSM generates the parity) Tj T* 0 Tw 1.133171 Tw (bit ) Tj /F4 10 Tf (outputq = 1) Tj /F1 10 Tf ( if the number of 1s received in the sequence so far is odd. Thus, this is an even parity) Tj T* 0 Tw (generator. Implement the FSM as a circuit in Logisim Evolution.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 85.86614 cm
q
BT 1 0 0 1 0 26 Tm .909513 Tw 12 TL /F1 10 Tf 0 0 0 rg (Note that the FSM outputs a 1 as long as the number of 1s received ) Tj /F4 10 Tf (so far) Tj /F1 10 Tf ( in the three-bit sequence is) Tj T* 0 Tw .362619 Tw (odd. This means that the circuit can output 1s before receiving all three bits. An example of this would be) Tj T* 0 Tw 1.174751 Tw (receiving the input 1 at the start; the circuit will output 1 after seeing the 1. Had the FSM received a 0) Tj T* 0 Tw ET
Q
Q
 
endstream
endobj
76 0 obj
<<
/Length 4686
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 729.0236 cm
q
BT 1 0 0 1 0 26 Tm .066488 Tw 12 TL /F1 10 Tf 0 0 0 rg (instead, the circuit would output 0. If the circuit receives a 0 after receiving the 1, the circuit would output 1) Tj T* 0 Tw .332619 Tw (again. Note that after receiving the three bits, the circuit resets and starts looking at the next three bit set;) Tj T* 0 Tw (thus, this is not a sliding window.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 699.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL -0.134358 Tw (You may use a maximum of 3 flip flops for this problem. If you need to use more than 3 flip flops, your FSM) Tj T* 0 Tw (is not minimized. You will lose a significant portion of credit if you have more than 3 flip flops in your circuit.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 645.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 38 Tm /F1 10 Tf 12 TL 1.043798 Tw (You may use a maximum of 14 AND gates and 4 OR gates with any number of inputs. You will lose a) Tj T* 0 Tw .13832 Tw (significant portion of credit if you have more, as it means your combinational logic is not minimized, or you) Tj T* 0 Tw .136098 Tw (made a mistake on code word assignment. If you violate both this and the previous constraint, you will get) Tj T* 0 Tw (a 0.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 618.0236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F3 12.5 Tf 0 0 0 rg (4. Bit sequence recognizer [30]) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 606.0236 cm
Q
q
1 0 0 1 62.69291 606.0236 cm
Q
q
1 0 0 1 62.69291 594.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Submission file for this part: ) Tj /F4 10 Tf (4.circ) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 588.0236 cm
Q
q
1 0 0 1 62.69291 576.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Main circuit name: ) Tj /F4 10 Tf (sequencecheck) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 570.0236 cm
Q
q
1 0 0 1 62.69291 558.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Input pin\(s\): ) Tj /F4 10 Tf (inputx) Tj /F1 10 Tf ( [1], ) Tj /F4 10 Tf (sysclock) Tj /F1 10 Tf ( [1]) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 552.0236 cm
Q
q
1 0 0 1 62.69291 540.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Output pin\(s\): ) Tj /F4 10 Tf (outputr) Tj /F1 10 Tf ( [1]) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 540.0236 cm
Q
q
1 0 0 1 62.69291 486.0236 cm
q
BT 1 0 0 1 0 38 Tm 2.304104 Tw 12 TL /F1 10 Tf 0 0 0 rg (Derive a minimal state table for a Mealy model FSM that acts as a sequence checker. During four) Tj T* 0 Tw .864104 Tw (consecutive clock cycles, a sequence of four values of the signal ) Tj /F4 10 Tf (x) Tj /F1 10 Tf ( is applied, forming a binary number.) Tj T* 0 Tw .414431 Tw (The oldest value of ) Tj /F4 10 Tf (x) Tj /F1 10 Tf ( would become the most significant bit in that binary number. The most recent value) Tj T* 0 Tw (of ) Tj /F4 10 Tf (x) Tj /F1 10 Tf ( would become the least significant bit.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 444.0236 cm
q
BT 1 0 0 1 0 26 Tm .190488 Tw 12 TL /F1 10 Tf 0 0 0 rg (The FSM will output ) Tj /F4 10 Tf (outputr = 1) Tj /F1 10 Tf ( when it detects that the previous 4 bit sequence was either 0100 or 1010.) Tj T* 0 Tw .343735 Tw (At all other times, including when the previous sequence was not those described previously, ) Tj /F4 10 Tf (outputr = 0) Tj /F1 10 Tf (.) Tj T* 0 Tw (Implement the FSM as a circuit in Logisim Evolution.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 414.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .773672 Tw (Note that much like the last problem, this is not a sliding window. After the fourth clock pulse, the circuit) Tj T* 0 Tw (resets itself and is ready to take in the next 4 bit sequence.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 396.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (You will lose a significant portion of credit if your FSM is not minimized.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 366.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .601098 Tw (You will lose a significant portion of credit if your combinational logic is not minimized. If you violate both) Tj T* 0 Tw (this and the previous constraint, you will get a 0.) Tj T* ET
Q
Q
 
endstream
endobj
77 0 obj
<<
/Nums [ 0 78 0 R 1 79 0 R 2 80 0 R 3 81 0 R 4 82 0 R 
  5 83 0 R ]
>>
endobj
78 0 obj
<<
/S /D /St 1
>>
endobj
79 0 obj
<<
/S /D /St 2
>>
endobj
80 0 obj
<<
/S /D /St 3
>>
endobj
81 0 obj
<<
/S /D /St 4
>>
endobj
82 0 obj
<<
/S /D /St 5
>>
endobj
83 0 obj
<<
/S /D /St 6
>>
endobj
xref
0 84
0000000000 65535 f 
0000000073 00000 n 
0000000147 00000 n 
0000000254 00000 n 
0000000366 00000 n 
0000000534 00000 n 
0000000702 00000 n 
0000000870 00000 n 
0000001038 00000 n 
0000001206 00000 n 
0000001374 00000 n 
0000001543 00000 n 
0000001712 00000 n 
0000001881 00000 n 
0000002050 00000 n 
0000002219 00000 n 
0000002388 00000 n 
0000002557 00000 n 
0000002726 00000 n 
0000002895 00000 n 
0000003064 00000 n 
0000003233 00000 n 
0000003402 00000 n 
0000003571 00000 n 
0000003740 00000 n 
0000003909 00000 n 
0000004078 00000 n 
0000004247 00000 n 
0000004416 00000 n 
0000004585 00000 n 
0000004754 00000 n 
0000004923 00000 n 
0000005092 00000 n 
0000005261 00000 n 
0000005430 00000 n 
0000005550 00000 n 
0000005978 00000 n 
0000006094 00000 n 
0000006200 00000 n 
0000006406 00000 n 
0000006594 00000 n 
0000006819 00000 n 
0000007001 00000 n 
0000007190 00000 n 
0000007378 00000 n 
0000007566 00000 n 
0000007757 00000 n 
0000007926 00000 n 
0000008095 00000 n 
0000008362 00000 n 
0000008568 00000 n 
0000008774 00000 n 
0000008880 00000 n 
0000009151 00000 n 
0000009226 00000 n 
0000009377 00000 n 
0000009527 00000 n 
0000009639 00000 n 
0000009822 00000 n 
0000009939 00000 n 
0000010074 00000 n 
0000010221 00000 n 
0000010360 00000 n 
0000010487 00000 n 
0000010606 00000 n 
0000010719 00000 n 
0000010891 00000 n 
0000011043 00000 n 
0000011189 00000 n 
0000011328 00000 n 
0000011461 00000 n 
0000011557 00000 n 
0000018535 00000 n 
0000027918 00000 n 
0000035479 00000 n 
0000043619 00000 n 
0000052739 00000 n 
0000057477 00000 n 
0000057566 00000 n 
0000057600 00000 n 
0000057634 00000 n 
0000057668 00000 n 
0000057702 00000 n 
0000057736 00000 n 
trailer
<<
/ID 
[<787a5561512efdbb028fa9c94d27a249><787a5561512efdbb028fa9c94d27a249>]
% ReportLab generated PDF document -- digest (http://www.reportlab.com)

/Info 52 0 R
/Root 51 0 R
/Size 84
>>
startxref
57770
%%EOF
